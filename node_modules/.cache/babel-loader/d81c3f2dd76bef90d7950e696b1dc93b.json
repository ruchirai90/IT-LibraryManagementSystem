{"ast":null,"code":"var _jsxFileName = \"/Users/rrai1/workspace/Practice/library-management-system/src/client/components/BookDashboard/BookDashboard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../actions/AddBookAction';\nimport SearchBook from '../SearchBook/SearchBook';\nimport Table from '../Table/Table';\nimport './BookDashboard.scss';\nimport * as utils from '../../utils/common'; //parent container\n\nclass BookDashboard extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Table, {\n      onChangeHandler: this.onChangeHandler,\n      bookList: this.props.books,\n      parentTableSelection: this.changeCurry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSelectionChange: index => {\n      return dispatch(actionCreator.selectItem(index));\n    },\n    getBooks: index => {\n      return dispatch(actionCreator.getBooks());\n    },\n    filterList: value => {\n      return dispatch(actionCreator.searchBook(value));\n    }\n  };\n};\n\nconst mapStateToProps = store => {\n  return {\n    books: store.books\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDashboard);","map":{"version":3,"sources":["/Users/rrai1/workspace/Practice/library-management-system/src/client/components/BookDashboard/BookDashboard.js"],"names":["React","connect","actionCreator","SearchBook","Table","utils","BookDashboard","Component","render","onChangeHandler","props","books","changeCurry","mapDispatchToProps","dispatch","onSelectionChange","index","selectItem","getBooks","filterList","value","searchBook","mapStateToProps","store"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,6BAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,sBAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,oBAAvB,C,CAEA;;AACA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAIxCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKC,eAA7B;AAA8C,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,KAAnE;AAA0E,MAAA,oBAAoB,EAAE,KAAKC,WAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAVuC;;AAa5C,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,iBAAiB,EAAGC,KAAD,IAAW;AAC1B,aAAOF,QAAQ,CAACZ,aAAa,CAACe,UAAd,CAAyBD,KAAzB,CAAD,CAAf;AACH,KAHE;AAIHE,IAAAA,QAAQ,EAAGF,KAAD,IAAW;AACjB,aAAOF,QAAQ,CAACZ,aAAa,CAACgB,QAAd,EAAD,CAAf;AACH,KANE;AAOHC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACnB,aAAON,QAAQ,CAACZ,aAAa,CAACmB,UAAd,CAAyBD,KAAzB,CAAD,CAAf;AACH;AATE,GAAP;AAWH,CAZD;;AAcA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AADV,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAClBqB,eADkB,EAElBT,kBAFkB,CAAP,CAESP,aAFT,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../actions/AddBookAction';\nimport SearchBook from '../SearchBook/SearchBook';\nimport Table from '../Table/Table';\nimport './BookDashboard.scss';\nimport * as utils from '../../utils/common';\n\n//parent container\nclass BookDashboard extends React.Component {\n\n \n\n    render() {\n        return (\n            <div>\n                <Table onChangeHandler={this.onChangeHandler} bookList={this.props.books} parentTableSelection={this.changeCurry} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSelectionChange: (index) => {\n            return dispatch(actionCreator.selectItem(index))\n        },\n        getBooks: (index) => {\n            return dispatch(actionCreator.getBooks())\n        },\n        filterList: (value) => {\n            return dispatch(actionCreator.searchBook(value))\n        }\n    };\n};\n\nconst mapStateToProps = store => {\n    return {\n        books: store.books\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps)(BookDashboard);"]},"metadata":{},"sourceType":"module"}