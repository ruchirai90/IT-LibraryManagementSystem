{"ast":null,"code":"var _jsxFileName = \"/Users/rrai1/workspace/Practice/library-management-system/src/client/components/Home/Home.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport Table from '../Table/Table';\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../actions/AddBookAction';\nimport * as utils from '../../utils/common'; //container \n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addBookHandler = () => {\n      this.props.manageModal(true, 'add');\n    };\n\n    this.editBookHandler = () => {\n      this.props.manageModal(true, 'edit');\n    };\n\n    this.changeCurry = (selectedIndex, method) => e => {\n      if (e.target.checked) {\n        method(selectedIndex);\n      }\n    };\n\n    this.filterList = utils.debounced(value => {\n      this.props.filterList(value);\n    }, 300);\n\n    this.onChangeHandler = selectedIndex => {\n      this.props.onSelectionChange(selectedIndex);\n    };\n\n    this.handleSearch = event => {\n      this.filterList(event.target.value);\n    };\n\n    this.filterDebounce = value => {\n      this.props.filterList(value);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getBooks();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Button, {\n      text: \"Add\",\n      parentClickHandler: this.addBookHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Button, {\n      text: \"Edit\",\n      state: this.props.isEditDisabled,\n      parentClickHandler: this.editBookHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(SearchBook, {\n      parentSearchHandler: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Table, {\n      onChangeHandler: this.onChangeHandler,\n      bookList: this.props.books,\n      parentTableSelection: this.changeCurry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(BookDashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  return {\n    books: store.books,\n    selectedIndex: store.selectedIndex,\n    isEditDisabled: store.isEditDisabled,\n    books: store.books\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    manageModal: (showModal, action) => {\n      return dispatch(actionCreator.manageModal(showModal, action));\n    },\n    onSelectionChange: index => {\n      return dispatch(actionCreator.selectItem(index));\n    },\n    getBooks: index => {\n      return dispatch(actionCreator.getBooks());\n    },\n    filterList: value => {\n      return dispatch(actionCreator.searchBook(value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/rrai1/workspace/Practice/library-management-system/src/client/components/Home/Home.js"],"names":["React","Component","Table","Button","connect","actionCreator","utils","Home","addBookHandler","props","manageModal","editBookHandler","changeCurry","selectedIndex","method","e","target","checked","filterList","debounced","value","onChangeHandler","onSelectionChange","handleSearch","event","filterDebounce","componentDidMount","getBooks","render","isEditDisabled","books","mapStateToProps","store","mapDispatchToProps","dispatch","showModal","action","index","selectItem","searchBook"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport Table from '../Table/Table'\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../actions/AddBookAction';\nimport * as utils from '../../utils/common';\n\n\n//container \n\nclass Home extends Component {\n    addBookHandler = () => {\n        this.props.manageModal(true, 'add');\n    }\n\n    editBookHandler = () => {\n        this.props.manageModal(true, 'edit');\n    }\n    changeCurry = (selectedIndex, method) => e => {\n        if (e.target.checked) {\n\n            method(selectedIndex);\n        }\n    }\n    filterList = utils.debounced((value) => {\n        this.props.filterList(value);\n    }, 300);\n\n    onChangeHandler = (selectedIndex) => {\n        this.props.onSelectionChange(selectedIndex);\n    }\n    handleSearch = (event) => {\n        this.filterList(event.target.value)\n\n    }\n    filterDebounce = (value) => {\n        this.props.filterList(value);\n    }\n    componentDidMount() {\n        this.props.getBooks();\n    }\n    render() {\n\n        return (\n            <div>\n                <Button text=\"Add\" parentClickHandler={this.addBookHandler} />\n                <Button text=\"Edit\" state={this.props.isEditDisabled} parentClickHandler={this.editBookHandler} />\n                <SearchBook parentSearchHandler={this.handleSearch} />\n                <Table onChangeHandler={this.onChangeHandler} bookList={this.props.books} parentTableSelection={this.changeCurry} />\n\n\n                <BookDashboard />\n            </div>\n        )\n    }\n\n}\nconst mapStateToProps = store => {\n    return {\n        books: store.books,\n        selectedIndex: store.selectedIndex,\n        isEditDisabled: store.isEditDisabled,\n        books: store.books\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        manageModal: (showModal, action) => {\n            return dispatch(actionCreator.manageModal(showModal, action))\n        },\n        onSelectionChange: (index) => {\n            return dispatch(actionCreator.selectItem(index))\n        },\n        getBooks: (index) => {\n            return dispatch(actionCreator.getBooks())\n        },\n        filterList: (value) => {\n            return dispatch(actionCreator.searchBook(value))\n        }\n    };\n};\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n"]},"metadata":{},"sourceType":"module"}