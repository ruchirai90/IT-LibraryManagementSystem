{"ast":null,"code":"import _objectSpread from \"/Users/rrai1/workspace/Practice/library-management-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst intialState = {\n  books: [],\n  actualList: [],\n  selectedIndex: -1,\n  selectedRecord: {\n    index: -1,\n    name: \"\",\n    description: \"\",\n    category: \"\",\n    author: \"\",\n    price: \"\"\n  },\n  showModal: false,\n  btnAction: ''\n};\n\nconst addBookReducer = (state = intialState, action) => {\n  if (action.type === 'ADD_BOOK') {\n    return _objectSpread({}, state, {\n      books: state.actualList.concat(action.value),\n      actualList: state.actualList.concat(action.value)\n    });\n  } else if (action.type === 'SEARCH_BOOK') {\n    if (action.value) {\n      let filteredArray = state.actualList.filter(item => {\n        return item.name.includes(action.value) || item.description.includes(action.value) || item.category.includes(action.value) || item.author.includes(action.value) || item.price.includes(action.value);\n      });\n      return _objectSpread({}, state, {\n        books: [...filteredArray]\n      });\n    } else {\n      return _objectSpread({}, state, {\n        books: [...state.actualList]\n      });\n    }\n  } else if (action.type === 'SELECT_ITEM') {\n    return _objectSpread({}, state, {\n      selectedIndex: action.value\n    });\n  } else if (action.type === 'SET_BOOK_LIST') {\n    return _objectSpread({}, state, {\n      books: action.value,\n      actualList: action.value\n    });\n  } else if (action.type === 'UPDATE_BOOK') {\n    const copyOfArray = [...state.actualList];\n    copyOfArray[state.selectedIndex] = action.value;\n    return _objectSpread({}, state, {\n      books: [...copyOfArray],\n      actualList: copyOfArray\n    });\n  } else if (action.type === 'CHANGE_RECORD') {\n    let copyOfSelectedRecord = _objectSpread({}, state.selectedRecord);\n\n    copyOfSelectedRecord[action.name] = action.value;\n    return _objectSpread({}, state, {\n      selectedRecord: _objectSpread({}, copyOfSelectedRecord)\n    });\n  } else if (action.type === 'TOGGLE_MODAL') {\n    if (action.btnAction === 'add') {\n      const obj = {\n        name: \"\",\n        description: \"\",\n        category: \"\",\n        author: \"\",\n        price: \"\"\n      };\n      state = _objectSpread({}, state, {\n        selectedRecord: _objectSpread({}, obj)\n      });\n    } else if (action.btnAction === 'edit') {\n      const obj = _objectSpread({}, state.books[state.selectedIndex]);\n\n      state = _objectSpread({}, state, {\n        selectedRecord: _objectSpread({}, obj)\n      });\n    }\n\n    return _objectSpread({}, state, {\n      showModal: action.showModal,\n      btnAction: action.btnAction\n    });\n  } else if (action.type === 'CLEAR_RECORD') {\n    const obj = {\n      name: \"\",\n      description: \"\",\n      category: \"\",\n      author: \"\",\n      price: \"\"\n    };\n    state = _objectSpread({}, state, {\n      selectedRecord: _objectSpread({}, obj)\n    });\n  }\n\n  return state;\n};\n\nexport default addBookReducer;","map":{"version":3,"sources":["/Users/rrai1/workspace/Practice/library-management-system/src/client/reducers/AddBookReducer.js"],"names":["intialState","books","actualList","selectedIndex","selectedRecord","index","name","description","category","author","price","showModal","btnAction","addBookReducer","state","action","type","concat","value","filteredArray","filter","item","includes","copyOfArray","copyOfSelectedRecord","obj"],"mappings":"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","sourcesContent":["const intialState = {\n    books: [],\n    actualList: [],\n    selectedIndex: -1,\n    selectedRecord: {\n        index: -1,\n        name: \"\",\n        description: \"\",\n        category: \"\",\n        author: \"\",\n        price: \"\"\n    },\n    showModal: false,\n    btnAction: ''\n}\n\nconst addBookReducer = (state = intialState, action) => {\n    if (action.type === 'ADD_BOOK') {\n        return {\n            ...state, books: state.actualList.concat(action.value), actualList: state.actualList.concat(action.value)\n        }\n    }\n    else if (action.type === 'SEARCH_BOOK') {\n\n        if (action.value) {\n            let filteredArray = state.actualList.filter((item) => {\n                return (item.name.includes(action.value) ||\n                     item.description.includes(action.value) ||\n                     item.category.includes(action.value) ||\n                     item.author.includes(action.value) ||\n                     item.price.includes(action.value)\n            )});\n            return {\n                ...state, books: [...filteredArray]\n            }\n        }\n        else {\n            return {\n                ...state, books: [...state.actualList]\n            }\n        }\n    }\n    else if (action.type === 'SELECT_ITEM') {\n        return {\n            ...state, selectedIndex: action.value\n        }\n    }\n    else if (action.type === 'SET_BOOK_LIST') {\n        return {\n            ...state, books: action.value,actualList:action.value\n        }\n    }\n\n    else if (action.type === 'UPDATE_BOOK') {\n        const copyOfArray = [...state.actualList];\n        copyOfArray[state.selectedIndex] = action.value;\n\n        return {\n            ...state, books: [...copyOfArray], actualList: copyOfArray\n        }\n    }\n\n    else if (action.type === 'CHANGE_RECORD') {\n        let copyOfSelectedRecord = { ...state.selectedRecord };\n        copyOfSelectedRecord[action.name] = action.value\n\n        return {\n            ...state, selectedRecord: { ...copyOfSelectedRecord }\n        }\n    }\n\n    else if (action.type === 'TOGGLE_MODAL') {\n        if (action.btnAction === 'add') {\n            const obj = {\n                name: \"\",\n                description: \"\",\n                category: \"\",\n                author: \"\",\n                price: \"\"\n\n            }\n            state = { ...state, selectedRecord: { ...obj } };\n        }\n        else if (action.btnAction === 'edit') {\n            const obj = { ...state.books[state.selectedIndex] };\n            state = { ...state, selectedRecord: { ...obj } };\n        }\n\n        return {\n            ...state, showModal: action.showModal, btnAction: action.btnAction\n\n        }\n    }\n    else if (action.type === 'CLEAR_RECORD') {\n        const obj = {\n            name: \"\",\n            description: \"\",\n            category: \"\",\n            author: \"\",\n            price: \"\"\n\n        }\n        state = { ...state, selectedRecord: { ...obj } };\n    }\n\n\n    return state;\n}\nexport default addBookReducer;"]},"metadata":{},"sourceType":"module"}